name: IntÃ©gration et Build

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  integration-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: watch_test
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v4

      - name: Start stack with Docker Compose
        run: docker compose -f docker-compose.yml up -d --build

      - name: Wait for containers
        run: sleep 50

      #- name: Run backend integration tests
      #  run: docker exec backend_dev npm test

      - name: Stop containers
        run: docker compose -f docker-compose.yml down

  build-push:
    needs: integration-test
    runs-on: ubuntu-latest
    # Construire et pousser seulement sur push vers main/master (pas sur les PRs)
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        component: [frontend, backend]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.component }}
          file: ./${{ matrix.component }}/Dockerfile
          push: true
          tags: ghcr.io/miriam-code/watch-${{ matrix.component }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max